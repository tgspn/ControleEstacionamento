create database estacionamento;

use estacionamento;

create table funcionario (
	id int not null auto_increment,
    nome varchar(50),
    endereco varchar(50),
    cpf varchar(20),
    tel varchar(20),
    cel varchar(20),
    salario decimal,
    primary key(id)
);

create table cliente (
	id int not null auto_increment,
    nome varchar(50),
    endereco varchar(50),
    cpf varchar(20),
    tel varchar(20),
    cel varchar(20),
    id_funcionario int,
    primary key(id),
    foreign key(id_funcionario) references funcionario(id)
);

create table veiculo (
	id int not null auto_increment,
    marca varchar(50),
    modelo varchar(50),
    ano varchar(4),
    placa varchar(20),
    id_cliente int,
    primary key(id),
    foreign key(id_cliente) references cliente(id)
);

create table vaga (
	id int not null auto_increment,
    nro varchar(10),
    acessibilidade bool,
    primary key(id)
);

create table ocupa (
	id_funcionario int,
    id_veiculo int,
    id_vaga int,
	dh_entrada datetime,
    dh_saida datetime,
    foreign key(id_funcionario) references funcionario(id),
    foreign key(id_veiculo) references veiculo(id),
    foreign key(id_vaga) references vaga(id)
);

-- Criação da tabela usuario

create table usuario 
(
	id int not null primary key auto_increment,
    usuario varchar(50),
    senha varchar(200)
)

-- Alteração na tabela funcionario

ALTER TABLE `estacionamento`.`funcionario` 
ADD COLUMN `usuario_id` INT(11) NULL AFTER `salario`,
ADD INDEX `id_idx` (`usuario_id` ASC);
ALTER TABLE `estacionamento`.`funcionario` 
ADD CONSTRAINT `id`
  FOREIGN KEY (`usuario_id`)
  REFERENCES `estacionamento`.`usuario` (`id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

-- Criação da view_cliente

CREATE  OR REPLACE VIEW `view_cliente` AS
SELECT `cliente`.`id`,
    `cliente`.`nome`,
    `cliente`.`endereco`,
    `cliente`.`cpf`,
    `cliente`.`tel`,
    `cliente`.`cel`,
    `funcionario`.`id` as funcionario_id,
    `funcionario`.`nome` as funcionario_nome,
    `funcionario`.`endereco` as funcionario_endereco,
    `funcionario`.`cpf` as funcionario_cpf,
    `funcionario`.`tel` as funcionario_telefone,
    `funcionario`.`cel` as funcionario_celular,
    `funcionario`.`salario`,
     `funcionario`.`usuario_id`
from cliente 
left join funcionario on cliente.id_funcionario=funcionario.id;
